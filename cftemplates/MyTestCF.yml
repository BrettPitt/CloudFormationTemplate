---
AWSTemplateFormatVersion: 2010-09-09
Description: App Deployment
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: App Settings
        Parameters:
          - Customer
          - AppName
          - CloudFrontParam
          - AppUrl
          - Branch
          - SiteCertificateArn
          - Branch
      - Label:
          default: Frontend settings
        Parameters:
          - BuildProjectBranchFrontend
      - Label:
          default: Backend settings
        Parameters:
          - BuildProjectBranchBackend
Parameters:
  AppName:
    Type: String
    Default: 'davystestappname'
    Description: The name of the app
  Customer:
    Type: String
    Default: davytestcfcustomer
    Description: The name of the customer for the app (for tagging)
  BuildProjectBranchFrontend:
    Type: String
    Default: main
    Description: The name of the Buildproject branch to use for the frontend
  BuildProjectBranchBackend:
    Type: String
    Default: master
    Description: The name of the Buildproject branch to use for the backend
  Branch:
    Type: String
    Default: dev
  Project:
    Type: String
    Default: serverlesscftest
  RepoFrontend:
    Default: 'davysbox'
    Description: CodeCommit Repo Frontend
    Type: String
  RepoBackend:
    Default: 'davysbox-backend'
    Description: CodeCommit Repo Frontend
    Type: String
  
Resources:
  DynamoTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TableName: !Sub ${Customer}-${AppName}-table
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: false
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: sk
          AttributeType: N
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
  CFTemplateTestBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Customer}-${AppName}-testbucket-${AWS::AccountId}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: customer
          Value: !Ref Customer
    DeletionPolicy: Delete
  UserPool:
    Type: AWS::Cognito::UserPool
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      AutoVerifiedAttributes:
        - email
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      UsernameAttributes:
        - phone_number
        - email
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolName: !Sub ${AppName}${BuildProjectBranchFrontend}
      UserPoolTags: {'customer': !Ref Customer}
      Schema:
        - Name: email
          Required: true
          Mutable: true
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      MfaConfiguration: "OFF"
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Sub ${Customer}-${AppName}${Branch}
      UserPoolId: !Ref UserPool
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      ClientName: !Sub ${Customer}-${AppName}
      GenerateSecret: false
      ReadAttributes:
        - email
      WriteAttributes:
        - email
      RefreshTokenValidity: 1
      CallbackURLs:
        - "http://localhost:4200"
      LogoutURLs:
        - "http://localhost:4200"
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - aws.cognito.signin.user.admin
      AllowedOAuthFlowsUserPoolClient: true
  Administrators:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: Admin
      UserPoolId: !Ref UserPool


















